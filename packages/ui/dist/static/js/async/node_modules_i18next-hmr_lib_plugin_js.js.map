{"version":3,"file":"static/js/async/node_modules_i18next-hmr_lib_plugin_js.js","sources":["/Users/ivnnv/Sites/ivnnv/bull-board/node_modules/i18next-hmr/lib/plugin.js","/Users/ivnnv/Sites/ivnnv/bull-board/node_modules/i18next-hmr/lib/utils.js","/Users/ivnnv/Sites/ivnnv/bull-board/node_modules/i18next-hmr/lib/vite/client-hmr.js","/Users/ivnnv/Sites/ivnnv/bull-board/node_modules/i18next-hmr/lib/webpack/client-hmr.js","/Users/ivnnv/Sites/ivnnv/bull-board/node_modules/i18next-hmr/lib/webpack/trigger.js","/Users/ivnnv/Sites/ivnnv/bull-board/node_modules/i18next-hmr/lib/webpack/server-hmr.js"],"sourcesContent":["class HMRPlugin {\n  constructor(hmrOptions = {}) {\n    this.type = '3rdParty';\n\n    const webpack = hmrOptions.webpack || {};\n    const vite = hmrOptions.vite || {};\n\n    if (webpack.client && typeof window !== 'undefined') {\n      const applyClientHMR = require('./webpack/client-hmr');\n      applyClientHMR(() => this.i18nInstance);\n    } else if (webpack.server && typeof window === 'undefined') {\n      const applyServerHMR = require('./webpack/server-hmr');\n      applyServerHMR(() => this.i18nInstance);\n    } else if (vite.client && typeof window !== 'undefined') {\n      const { applyViteClientHMR } = require('./vite/client-hmr');\n      applyViteClientHMR(() => this.i18nInstance);\n    }\n  }\n\n  init(i18nInstance) {\n    this.i18nInstance = i18nInstance;\n  }\n\n  toJSON() {\n    return null;\n  }\n\n  toString() {\n    return 'HMRPlugin';\n  }\n}\n\nmodule.exports.HMRPlugin = HMRPlugin;\n","function extractLangAndNS(changedFile, currentConfig) {\n  const changedFileParts = changedFile.replace(/\\\\/g, '/').split('/');\n\n  const firstLongestNSMatchParts = []\n    .concat(currentConfig.namespaces)\n    .map((ns) => ns.split('/'))\n    .sort((a, b) => b.length - a.length)\n    .find((optionalNS) =>\n      optionalNS.every((optionalNSPart) => changedFileParts.includes(optionalNSPart))\n    );\n\n  if (!firstLongestNSMatchParts) {\n    return { lang: null, ns: null };\n  }\n\n  const lang = changedFileParts\n    .filter(\n      (part) => !firstLongestNSMatchParts.includes(part) && currentConfig.languages.includes(part)\n    )\n    .join('/');\n\n  return {\n    lang,\n    ns: firstLongestNSMatchParts.join('/'),\n  };\n}\n\nfunction printList(list) {\n  return list.map((item) => `${item.lang}/${item.ns}`).join(', ');\n}\n\nfunction extractList(changedFiles, i18nInstance) {\n  const namespaces = uniqueList(\n    []\n      .concat(\n        i18nInstance.options.ns,\n        i18nInstance.options.fallbackNS,\n        i18nInstance.options.defaultNS\n      )\n      .filter(Boolean)\n  );\n  const languages = uniqueList(\n    [].concat(\n      i18nInstance.languages,\n      i18nInstance.options.supportedLngs,\n      i18nInstance.options.lng,\n      i18nInstance.options.fallbackLng\n    )\n  );\n\n  return changedFiles\n    .map((changedFile) => extractLangAndNS(changedFile, { namespaces, languages }))\n    .filter(({ lang, ns }) => Boolean(lang) && Boolean(ns));\n}\n\nfunction uniqueList(list) {\n  return [...new Set(list)];\n}\n\nfunction createLoggerOnce(logger) {\n  const msgCount = new Map();\n  return (msg, type = 'log') => {\n    const count = msgCount.has(msg) ? msgCount.get(msg) : 0;\n    if (count > 0) {\n      return;\n    }\n\n    logger(msg, type);\n    msgCount.set(msg, count + 1);\n  };\n}\n\nfunction log(msg, type = 'log') {\n  console[type](`[%cI18NextHMR%c] ${msg}`, 'color:#bc93b6', '');\n}\n\nconst logOnce = createLoggerOnce(log);\n\nasync function reloadTranslations(list, i18nInstance) {\n  let backendOptions = { queryStringParams: {} };\n  try {\n    backendOptions = i18nInstance.services.backendConnector.backend.options;\n    backendOptions.queryStringParams = backendOptions.queryStringParams || {};\n    backendOptions.queryStringParams._ = new Date().getTime(); // cache killer\n  } catch (e) {\n    logOnce('Client i18next-http-backend not found, hmr may not work', 'warn');\n  }\n\n  const langs = uniqueList(list.map((item) => item.lang));\n  const namespaces = uniqueList(list.map((item) => item.ns));\n\n  await i18nInstance.reloadResources(langs, namespaces, (error) => {\n    if (error) {\n      log(error, 'error');\n      return;\n    }\n\n    const currentLang = i18nInstance.language;\n\n    if (langs.includes(currentLang)) {\n      i18nInstance.changeLanguage(currentLang);\n      log(`Update applied successfully`);\n    } else {\n      log(`Resources of '${printList(list)}' were reloaded successfully`);\n    }\n  });\n}\n\nmodule.exports = {\n  printList: printList,\n  extractList: extractList,\n  log: log,\n  createLoggerOnce: createLoggerOnce,\n  uniqueList: uniqueList,\n  reloadTranslations: reloadTranslations,\n};\n","export function applyViteClientHMR(i18nOrGetter) {\n  if (import.meta.hot) {\n    const { extractList, printList, reloadTranslations, log } = require('../utils');\n\n    log('Client HMR has started');\n\n    import.meta.hot.on('i18next-hmr:locale-changed', ({ changedFiles }) => {\n      const i18nInstance =\n        typeof i18nOrGetter === 'function' ? i18nOrGetter({ changedFiles }) : i18nOrGetter;\n\n      const list = extractList(changedFiles, i18nInstance);\n\n      if (!list.length) {\n        return;\n      }\n\n      log(`Got an update with ${printList(list)}`);\n\n      return reloadTranslations(list, i18nInstance);\n    });\n  }\n}\n","module.exports = function applyClientHMR(i18nOrGetter) {\n  if (module.hot) {\n    const { extractList, printList, reloadTranslations, log } = require('../utils');\n    const { changedFile } = require('./trigger.js');\n\n    if (!changedFile || changedFile) {\n      // We must use the required variable\n      log('Client HMR has started');\n    }\n\n    module.hot.accept('./trigger.js', () => {\n      const { changedFiles } = require('./trigger.js');\n      const i18nInstance =\n        typeof i18nOrGetter === 'function' ? i18nOrGetter({ changedFiles }) : i18nOrGetter;\n\n      const list = extractList(changedFiles, i18nInstance);\n\n      if (!list.length) {\n        return;\n      }\n\n      log(`Got an update with ${printList(list)}`);\n\n      return reloadTranslations(list, i18nInstance);\n    });\n  }\n};\n","module.exports = {\"changedFiles\":[]};\n//1756647378581","const { extractList, printList, uniqueList, createLoggerOnce } = require('../utils');\n\nmodule.exports = function applyServerHMR(i18nOrGetter) {\n  const pluginName = `\\x1b[35m\\x1b[1m${'I18NextHMR'}\\x1b[0m\\x1b[39m`;\n  function log(message, type = 'log') {\n    console[type](`[ ${pluginName} ] ${message}`);\n  }\n\n  const logOnce = createLoggerOnce(log);\n\n  function reloadServerTranslation({ changedFiles }) {\n    const i18nInstance =\n      typeof i18nOrGetter === 'function' ? i18nOrGetter({ changedFiles }) : i18nOrGetter;\n\n    if (!i18nInstance) {\n      return;\n    }\n\n    const list = extractList(changedFiles, i18nInstance);\n\n    if (list.length === 0) {\n      return;\n    }\n\n    log(`Got an update with ${printList(list)}`);\n\n    const langs = uniqueList(list.map((item) => item.lang));\n    const namespaces = uniqueList(list.map((item) => item.ns));\n\n    i18nInstance.reloadResources(langs, namespaces, (error) => {\n      if (error) {\n        log(`\\x1b[31m\\x1b[1m${error}\\x1b[0m\\x1b[39m`);\n      } else {\n        log(`Server reloaded locale of ${printList(list)} successfully`);\n      }\n    });\n  }\n\n  if (module.hot) {\n    const { changedFile } = require('./trigger.js');\n\n    if (!changedFile || changedFile) {\n      // We must use the required variable\n      logOnce(`Server HMR has started`);\n    }\n\n    module.hot.accept('./trigger.js', () => {\n      const changedFiles = require('./trigger.js');\n      reloadServerTranslation(changedFiles);\n    });\n  } else {\n    logOnce(`Server HMR has started - callback mode`);\n\n    const HMRPlugin = require('./plugin').I18NextHMRPlugin;\n    HMRPlugin.addListener(reloadServerTranslation);\n  }\n};\n"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AChnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC1BA;AACA;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAMA"}