{"version":3,"file":"static/js/async/src_components_Icons_ArrowLeft_tsx-src_components_JobCard_JobCard_tsx-src_components_StickyHe-708be4.js","sources":["/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/Card/Card.module.css","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/Form/Field/Field.module.css","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/Highlight/Highlight.module.css","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/JobCard/Details/Details.module.css","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/JobCard/Details/DetailsContent/JobLogs/JobLogs.module.css","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/JobCard/JobActions/JobActions.module.css","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/JobCard/JobCard.module.css","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/JobCard/Progress/Progress.module.css","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/JobCard/Timeline/Timeline.module.css","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/StickyHeader/StickyHeader.module.css","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/Tooltip/Tooltip.module.css","/Users/ivnnv/Sites/ivnnv/bull-board/packages/api/dist/constants/statuses.js","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/Card/Card.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/Form/Field/Field.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/Form/InputField/InputField.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/Highlight/Highlight.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/Icons/ArrowLeft.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/Icons/ChevronUp.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/Icons/Copy.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/Icons/Duplicate.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/Icons/Pause.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/Icons/Play.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/Icons/Promote.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/Icons/Retry.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/Icons/Trash.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/Icons/UpRightFromSquare.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/Icons/UpdateIcon.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/JobCard/Details/Details.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/JobCard/Details/DetailsContent/DetailsContent.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/JobCard/Details/DetailsContent/JobLogs/JobLogs.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/JobCard/JobActions/JobActions.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/JobCard/JobCard.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/JobCard/Progress/Progress.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/JobCard/Timeline/Timeline.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/StickyHeader/StickyHeader.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/components/Tooltip/Tooltip.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/hooks/useActiveJobId.ts","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/hooks/useDetailsTabs.tsx","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/hooks/useJob.ts","/Users/ivnnv/Sites/ivnnv/bull-board/packages/ui/src/utils/highlight/highlight.ts"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport default {\"card\":\"src-components-Card-Card-module__card-xqyZlH\"};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = \"{\\\"card\\\":\\\"src-components-Card-Card-module__card-xqyZlH\\\"}\";\n        // 1756647378732\n        var cssReload = require(\"../../../../../node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport default {\"field\":\"src-components-Form-Field-Field-module__field-JbAWJt\",\"inline\":\"src-components-Form-Field-Field-module__inline-vXG0Za\"};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = \"{\\\"field\\\":\\\"src-components-Form-Field-Field-module__field-JbAWJt\\\",\\\"inline\\\":\\\"src-components-Form-Field-Field-module__inline-vXG0Za\\\"}\";\n        // 1756647378733\n        var cssReload = require(\"../../../../../../node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport default {\"codeContainerWrapper\":\"src-components-Highlight-Highlight-module__codeContainerWrapper-ZpYBAP\",\"copyBtn\":\"src-components-Highlight-Highlight-module__copyBtn-vLoi5u\"};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = \"{\\\"codeContainerWrapper\\\":\\\"src-components-Highlight-Highlight-module__codeContainerWrapper-ZpYBAP\\\",\\\"copyBtn\\\":\\\"src-components-Highlight-Highlight-module__copyBtn-vLoi5u\\\"}\";\n        // 1756647378737\n        var cssReload = require(\"../../../../../node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport default {\"details\":\"src-components-JobCard-Details-Details-module__details-LkCTWS\",\"tabActions\":\"src-components-JobCard-Details-Details-module__tabActions-fF3v6_\",\"tabContent\":\"src-components-JobCard-Details-Details-module__tabContent-qmHNgq\"};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = \"{\\\"details\\\":\\\"src-components-JobCard-Details-Details-module__details-LkCTWS\\\",\\\"tabActions\\\":\\\"src-components-JobCard-Details-Details-module__tabActions-fF3v6_\\\",\\\"tabContent\\\":\\\"src-components-JobCard-Details-Details-module__tabContent-qmHNgq\\\"}\";\n        // 1756647378728\n        var cssReload = require(\"../../../../../../node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport default {\"jobLogs\":\"src-components-JobCard-Details-DetailsContent-JobLogs-JobLogs-module__jobLogs-MsL4aJ\",\"preWrapper\":\"src-components-JobCard-Details-DetailsContent-JobLogs-JobLogs-module__preWrapper-V9RpQs\",\"toolbar\":\"src-components-JobCard-Details-DetailsContent-JobLogs-JobLogs-module__toolbar-duDU2f\",\"searchBar\":\"src-components-JobCard-Details-DetailsContent-JobLogs-JobLogs-module__searchBar-N4o70g\",\"logLineCopyButton\":\"src-components-JobCard-Details-DetailsContent-JobLogs-JobLogs-module__logLineCopyButton-LnHhmG\"};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = \"{\\\"jobLogs\\\":\\\"src-components-JobCard-Details-DetailsContent-JobLogs-JobLogs-module__jobLogs-MsL4aJ\\\",\\\"preWrapper\\\":\\\"src-components-JobCard-Details-DetailsContent-JobLogs-JobLogs-module__preWrapper-V9RpQs\\\",\\\"toolbar\\\":\\\"src-components-JobCard-Details-DetailsContent-JobLogs-JobLogs-module__toolbar-duDU2f\\\",\\\"searchBar\\\":\\\"src-components-JobCard-Details-DetailsContent-JobLogs-JobLogs-module__searchBar-N4o70g\\\",\\\"logLineCopyButton\\\":\\\"src-components-JobCard-Details-DetailsContent-JobLogs-JobLogs-module__logLineCopyButton-LnHhmG\\\"}\";\n        // 1756647378735\n        var cssReload = require(\"../../../../../../../../node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport default {\"jobActions\":\"src-components-JobCard-JobActions-JobActions-module__jobActions-XfoQK8\",\"button\":\"src-components-JobCard-JobActions-JobActions-module__button-GXX8BV\"};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = \"{\\\"jobActions\\\":\\\"src-components-JobCard-JobActions-JobActions-module__jobActions-XfoQK8\\\",\\\"button\\\":\\\"src-components-JobCard-JobActions-JobActions-module__button-GXX8BV\\\"}\";\n        // 1756647378731\n        var cssReload = require(\"../../../../../../node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport default {\"card\":\"src-components-JobCard-JobCard-module__card-BRjpw_\",\"contentWrapper\":\"src-components-JobCard-JobCard-module__contentWrapper-Aj9Wmy\",\"title\":\"src-components-JobCard-JobCard-module__title-wDT4dB\",\"sideInfo\":\"src-components-JobCard-JobCard-module__sideInfo-a9IFbv\",\"header\":\"src-components-JobCard-JobCard-module__header-Lw4QCc\",\"details\":\"src-components-JobCard-JobCard-module__details-JRsI9B\",\"collapseBtn\":\"src-components-JobCard-JobCard-module__collapseBtn-J6rMz7\",\"content\":\"src-components-JobCard-JobCard-module__content-SHI77x\",\"progress\":\"src-components-JobCard-JobCard-module__progress-POOya3\",\"jobLink\":\"src-components-JobCard-JobCard-module__jobLink-wmCWQg\",\"externalLink\":\"src-components-JobCard-JobCard-module__externalLink-dX0ReW\",\"titleWithLink\":\"src-components-JobCard-JobCard-module__titleWithLink-UFeEb7\"};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = \"{\\\"card\\\":\\\"src-components-JobCard-JobCard-module__card-BRjpw_\\\",\\\"contentWrapper\\\":\\\"src-components-JobCard-JobCard-module__contentWrapper-Aj9Wmy\\\",\\\"title\\\":\\\"src-components-JobCard-JobCard-module__title-wDT4dB\\\",\\\"sideInfo\\\":\\\"src-components-JobCard-JobCard-module__sideInfo-a9IFbv\\\",\\\"header\\\":\\\"src-components-JobCard-JobCard-module__header-Lw4QCc\\\",\\\"details\\\":\\\"src-components-JobCard-JobCard-module__details-JRsI9B\\\",\\\"collapseBtn\\\":\\\"src-components-JobCard-JobCard-module__collapseBtn-J6rMz7\\\",\\\"content\\\":\\\"src-components-JobCard-JobCard-module__content-SHI77x\\\",\\\"progress\\\":\\\"src-components-JobCard-JobCard-module__progress-POOya3\\\",\\\"jobLink\\\":\\\"src-components-JobCard-JobCard-module__jobLink-wmCWQg\\\",\\\"externalLink\\\":\\\"src-components-JobCard-JobCard-module__externalLink-dX0ReW\\\",\\\"titleWithLink\\\":\\\"src-components-JobCard-JobCard-module__titleWithLink-UFeEb7\\\"}\";\n        // 1756647378721\n        var cssReload = require(\"../../../../../node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport default {\"progress\":\"src-components-JobCard-Progress-Progress-module__progress-Rr7sCM\",\"failed\":\"src-components-JobCard-Progress-Progress-module__failed-rTUpGj\",\"success\":\"src-components-JobCard-Progress-Progress-module__success-RY6h2q\"};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = \"{\\\"progress\\\":\\\"src-components-JobCard-Progress-Progress-module__progress-Rr7sCM\\\",\\\"failed\\\":\\\"src-components-JobCard-Progress-Progress-module__failed-rTUpGj\\\",\\\"success\\\":\\\"src-components-JobCard-Progress-Progress-module__success-RY6h2q\\\"}\";\n        // 1756647378733\n        var cssReload = require(\"../../../../../../node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport default {\"timeline\":\"src-components-JobCard-Timeline-Timeline-module__timeline-lF9niS\",\"timelineWrapper\":\"src-components-JobCard-Timeline-Timeline-module__timelineWrapper-iZqG0C\"};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = \"{\\\"timeline\\\":\\\"src-components-JobCard-Timeline-Timeline-module__timeline-lF9niS\\\",\\\"timelineWrapper\\\":\\\"src-components-JobCard-Timeline-Timeline-module__timelineWrapper-iZqG0C\\\"}\";\n        // 1756647378736\n        var cssReload = require(\"../../../../../../node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport default {\"stickyHeader\":\"src-components-StickyHeader-StickyHeader-module__stickyHeader-Woc0cg\",\"actionContainer\":\"src-components-StickyHeader-StickyHeader-module__actionContainer-gipYSV\"};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = \"{\\\"stickyHeader\\\":\\\"src-components-StickyHeader-StickyHeader-module__stickyHeader-Woc0cg\\\",\\\"actionContainer\\\":\\\"src-components-StickyHeader-StickyHeader-module__actionContainer-gipYSV\\\"}\";\n        // 1756647378713\n        var cssReload = require(\"../../../../../node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport default {\"tooltip\":\"src-components-Tooltip-Tooltip-module__tooltip-QJB3Pz\"};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = \"{\\\"tooltip\\\":\\\"src-components-Tooltip-Tooltip-module__tooltip-QJB3Pz\\\"}\";\n        // 1756647378734\n        var cssReload = require(\"../../../../../node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STATUSES = void 0;\nexports.STATUSES = {\n    latest: 'latest',\n    active: 'active',\n    waiting: 'waiting',\n    waitingChildren: 'waiting-children',\n    prioritized: 'prioritized',\n    completed: 'completed',\n    failed: 'failed',\n    delayed: 'delayed',\n    paused: 'paused',\n};\n//# sourceMappingURL=statuses.js.map\nfunction $RefreshSig$() {\n  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();\n}\nfunction $RefreshReg$(type, id) {\n  $ReactRefreshRuntime$.register(type, __webpack_module__.id + \"_\" + id);\n}\nPromise.resolve().then(function() {\n  $ReactRefreshRuntime$.refresh(__webpack_module__.id, __webpack_module__.hot);\n});\n","import cn from 'clsx';\nimport React, { PropsWithChildren } from 'react';\nimport s from './Card.module.css';\n\ninterface ICardProps {\n  className?: string;\n}\nexport const Card = ({ children, className }: PropsWithChildren<ICardProps>) => (\n  <div className={cn(s.card, className)}>{children}</div>\n);\n","import cn from 'clsx';\nimport React, { PropsWithChildren } from 'react';\nimport s from './Field.module.css';\n\ninterface FieldProps {\n  label?: string;\n  id?: string;\n  inline?: boolean;\n}\n\nexport const Field = ({ label, id, inline, children }: PropsWithChildren<FieldProps>) => (\n  <div className={cn(s.field, { [s.inline]: inline })}>\n    {!!label && !inline && <label htmlFor={id}>{label}</label>}\n    {children}\n    {!!label && inline && <label htmlFor={id}>{label}</label>}\n  </div>\n);\n","import React, { InputHTMLAttributes } from 'react';\nimport { Field } from '../Field/Field';\n\ninterface InputFieldProps extends InputHTMLAttributes<any> {\n  label?: string;\n}\n\nexport const InputField = ({ label, id, ...inputProps }: InputFieldProps) => (\n  <Field label={label} id={id}>\n    <input id={id} type=\"text\" {...inputProps} />\n  </Field>\n);\n","import cn from 'clsx';\nimport React, { useEffect, useState } from 'react';\nimport { asyncHighlight } from '../../utils/highlight/highlight';\nimport s from './Highlight.module.css';\nimport { Button } from '../Button/Button';\nimport { CopyIcon } from '../Icons/Copy';\n\ninterface HighlightProps {\n  language: 'json' | 'stacktrace';\n  text: string;\n}\n\nexport const Highlight: React.FC<HighlightProps> = ({ language, text }) => {\n  const [code, setCode] = useState<string>('');\n\n  useEffect(() => {\n    let unmount = false;\n    asyncHighlight(text as string, language).then((newCode) => {\n      if (!unmount) {\n        setCode(newCode);\n      }\n    });\n\n    return () => {\n      unmount = true;\n    };\n  }, [language, text]);\n\n  const handleCopyClick = () => {\n    navigator.clipboard.writeText(text ?? '');\n  };\n\n  return (\n    <div className={s.codeContainerWrapper}>\n      <pre>\n        <code className={cn('hljs', language)} dangerouslySetInnerHTML={{ __html: code }} />\n      </pre>\n\n      <Button onClick={handleCopyClick} className={s.copyBtn}>\n        <CopyIcon />\n      </Button>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const ArrowLeftIcon = () => (\n  <svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 256 512\">\n    <path d=\"M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport const ChevronUp = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n    <path d=\"M241 130.5l194.3 194.3c9.4 9.4 9.4 24.6 0 33.9l-22.7 22.7c-9.4 9.4-24.5 9.4-33.9 0L224 227.5 69.3 381.5c-9.4 9.3-24.5 9.3-33.9 0l-22.7-22.7c-9.4-9.4-9.4-24.6 0-33.9L207 130.5C216.4 121.2 231.6 121.2 241 130.5z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport const CopyIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\">\n    <path d=\"M280 64l40 0c35.3 0 64 28.7 64 64l0 320c0 35.3-28.7 64-64 64L64 512c-35.3 0-64-28.7-64-64L0 128C0 92.7 28.7 64 64 64l40 0 9.6 0C121 27.5 153.3 0 192 0s71 27.5 78.4 64l9.6 0zM64 112c-8.8 0-16 7.2-16 16l0 320c0 8.8 7.2 16 16 16l256 0c8.8 0 16-7.2 16-16l0-320c0-8.8-7.2-16-16-16l-16 0 0 24c0 13.3-10.7 24-24 24l-88 0-88 0c-13.3 0-24-10.7-24-24l0-24-16 0zm128-8a24 24 0 1 0 0-48 24 24 0 1 0 0 48z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport const DuplicateIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n    <path d=\"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport const PauseIcon = () => (\n  <svg aria-hidden=\"true\" focusable=\"false\" role=\"img\"\n       xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n    <path\n      d=\"M144 479H48c-26.5 0-48-21.5-48-48V79c0-26.5 21.5-48 48-48h96c26.5 0 48 21.5 48 48v352c0 26.5-21.5 48-48 48zm304-48V79c0-26.5-21.5-48-48-48h-96c-26.5 0-48 21.5-48 48v352c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48z\"\n    ></path>\n  </svg>\n);\n","import React from 'react';\n\nexport const PlayIcon = () => (\n  <svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\n       viewBox=\"0 0 448 512\">\n    <path\n      d=\"M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z\"\n    ></path>\n  </svg>\n);\n","import React from 'react';\n\nexport const PromoteIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n    <path d=\"M15 17v-2.99A4 4 0 0 0 11 10H8v5L2 9l6-6v5h3a6 6 0 0 1 6 6v3h-2z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport const RetryIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n    <path d=\"M5 4a2 2 0 0 0-2 2v6H0l4 4 4-4H5V6h7l2-2H5zm10 4h-3l4-4 4 4h-3v6a2 2 0 0 1-2 2H6l2-2h7V8z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport const TrashIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n    <path d=\"M6 2l2-2h4l2 2h4v2H2V2h4zM3 6h14l-1 14H4L3 6zm5 2v10h1V8H8zm3 0v10h1V8h-1z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport const UpRightFromSquareSolid = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 512 512\">\n    <path d=\"M352 0c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9L370.7 96 201.4 265.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L416 141.3l41.4 41.4c9.2 9.2 22.9 11.9 34.9 6.9s19.8-16.6 19.8-29.6V32c0-17.7-14.3-32-32-32H352zM80 32C35.8 32 0 67.8 0 112v320c0 44.2 35.8 80 80 80h320c44.2 0 80-35.8 80-80V320c0-17.7-14.3-32-32-32s-32 14.3-32 32v112c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16V112c0-8.8 7.2-16 16-16h112c17.7 0 32-14.3 32-32s-14.3-32-32-32H80z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport const UpdateIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n    <path d=\"M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160L0 416c0 53 43 96 96 96l256 0c53 0 96-43 96-96l0-96c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 96c0 17.7-14.3 32-32 32L96 448c-17.7 0-32-14.3-32-32l0-256c0-17.7 14.3-32 32-32l96 0c17.7 0 32-14.3 32-32s-14.3-32-32-32L96 64z\" />\n  </svg>\n);\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDetailsTabs } from '../../../hooks/useDetailsTabs';\nimport { Button } from '../../Button/Button';\nimport s from './Details.module.css';\nimport { DetailsContent } from './DetailsContent/DetailsContent';\nimport type { AppJob, Status } from '@bull-board/api/typings/app';\n\ninterface DetailsProps {\n  job: AppJob;\n  status: Status;\n  actions: { getJobLogs: () => Promise<string[]> };\n}\n\nexport const Details = ({ status, job, actions }: DetailsProps) => {\n  const { tabs, selectedTab } = useDetailsTabs(status);\n  const { t } = useTranslation();\n\n  if (tabs.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={s.details}>\n      <ul className={s.tabActions}>\n        {tabs.map((tab) => (\n          <li key={tab.title}>\n            <Button onClick={tab.selectTab} isActive={tab.isActive}>\n              {t(`JOB.TABS.${tab.title.toUpperCase()}`)}\n            </Button>\n          </li>\n        ))}\n      </ul>\n      <div className={s.tabContent}>\n        <DetailsContent selectedTab={selectedTab} job={job} actions={actions} />\n      </div>\n    </div>\n  );\n};\n","import type { AppJob } from '@bull-board/api/typings/app';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TabsType } from '../../../../hooks/useDetailsTabs';\nimport { useSettingsStore } from '../../../../hooks/useSettings';\nimport { Highlight } from '../../../Highlight/Highlight';\nimport { ChevronDown } from '../../../Icons/ChevronDown';\nimport { Button } from '../../../Button/Button';\nimport { JobLogs } from './JobLogs/JobLogs';\n\ninterface DetailsContentProps {\n  job: AppJob;\n  selectedTab: TabsType;\n  actions: {\n    getJobLogs: () => Promise<string[]>;\n  };\n}\n\nexport const DetailsContent = ({ selectedTab, job, actions }: DetailsContentProps) => {\n  const { t } = useTranslation();\n  const { collapseJobData, collapseJobOptions, collapseJobError } = useSettingsStore();\n  const [collapseState, setCollapse] = useState({ data: false, options: false, error: false });\n  const { stacktrace, data: jobData, returnValue, opts, failedReason } = job;\n\n  switch (selectedTab) {\n    case 'Data':\n      return collapseJobData && !collapseState.data ? (\n        <Button onClick={() => setCollapse({ ...collapseState, data: true })}>\n          {t('JOB.SHOW_DATA_BTN')} <ChevronDown />\n        </Button>\n      ) : (\n        <Highlight language=\"json\" text={JSON.stringify({ jobData, returnValue }, null, 2)} />\n      );\n    case 'Options':\n      return collapseJobOptions && !collapseState.options ? (\n        <Button onClick={() => setCollapse({ ...collapseState, options: true })}>\n          {t('JOB.SHOW_OPTIONS_BTN')} <ChevronDown />\n        </Button>\n      ) : (\n        <Highlight language=\"json\" text={JSON.stringify(opts, null, 2)} />\n      );\n    case 'Error':\n      if (stacktrace.length === 0) {\n        return <div className=\"error\">{!!failedReason ? failedReason : t('JOB.NA')}</div>;\n      }\n\n      return collapseJobError && !collapseState.error ? (\n        <Button onClick={() => setCollapse({ ...collapseState, error: true })}>\n          {t('JOB.SHOW_ERRORS_BTN')} <ChevronDown />\n        </Button>\n      ) : (\n        <Highlight language=\"stacktrace\" key=\"stacktrace\" text={stacktrace.join('\\n')} />\n      );\n    case 'Logs':\n      return <JobLogs actions={actions} job={job} />;\n    default:\n      return null;\n  }\n};\n","import type { AppJob } from '@bull-board/api/typings/app';\nimport React, { SyntheticEvent, useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useInterval } from '../../../../../hooks/useInterval';\nimport { InputField } from '../../../../Form/InputField/InputField';\nimport { FullscreenIcon } from '../../../../Icons/Fullscreen';\nimport { PauseIcon } from '../../../../Icons/Pause';\nimport { PlayIcon } from '../../../../Icons/Play';\nimport { CopyIcon } from '../../../../Icons/Copy';\nimport { Button } from '../../../../Button/Button';\nimport s from './JobLogs.module.css';\n\ninterface JobLogsProps {\n  job: AppJob;\n  actions: {\n    getJobLogs: () => Promise<string[]>;\n  };\n}\n\ninterface LogType {\n  message: string;\n  lineNumber: number;\n}\n\nconst getLogType = (log: LogType) => {\n  const msgType = log.message?.match(/((info|warn|error)?):/i)?.[1];\n  return msgType?.toLowerCase();\n};\n\nconst onClickFullScreen = (el: HTMLElement | null) => async () => {\n  if (!!el && document.fullscreenElement !== el) return await el.requestFullscreen();\n  return document.exitFullscreen();\n};\n\nconst copyLogToClipboard = (log: LogType) => {\n  navigator.clipboard.writeText(log.message);\n};\n\nconst shouldShow = (log: LogType, keyword = '') => {\n  return !keyword || new RegExp(`${keyword}`, 'i').test(log.message);\n};\n\nfunction formatLogs(logs: string[]) {\n  return logs.map((message, i) => ({ message, lineNumber: i + 1 }));\n}\n\nexport const JobLogs = ({ actions, job }: JobLogsProps) => {\n  const { t } = useTranslation();\n  const [logs, setLogs] = useState<LogType[]>([]);\n  const [liveLogs, setLiveLogs] = useState(false);\n  const [keyword, setKeyword] = useState('');\n  const logsContainer = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    let mounted = true;\n    actions.getJobLogs().then((logs) => {\n      if (mounted) {\n        setLogs(formatLogs(logs));\n      }\n    });\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  useInterval(\n    async () => {\n      const wrapper = logsContainer.current?.querySelector(`.${s.preWrapper}`);\n      const logs = await actions.getJobLogs();\n      setLogs(formatLogs(logs));\n      requestAnimationFrame(() => {\n        wrapper?.scrollTo({\n          top: wrapper?.scrollHeight,\n          behavior: 'smooth',\n        });\n      });\n    },\n    liveLogs ? 2500 : null\n  );\n\n  const toggleLiveLogsButton = () => {\n    setLiveLogs(!liveLogs);\n  };\n\n  const copyLogsToShowToClipboard = () => {\n    const text: string = logsToShow.map((log) => log.message).join('\\n');\n    navigator.clipboard.writeText(text);\n  };\n\n  const onSearch = (event: SyntheticEvent<HTMLInputElement>) => {\n    if (!event.currentTarget?.value) {\n      setKeyword('');\n    }\n  };\n\n  const onSearchSubmit = (event: SyntheticEvent<HTMLFormElement>) => {\n    setKeyword(event.currentTarget?.searchQuery?.value || '');\n    event.preventDefault();\n  };\n\n  const logsToShow = logs.filter((log) => shouldShow(log, keyword));\n\n  return (\n    <div className={s.jobLogs} ref={logsContainer}>\n      <ul className={s.toolbar}>\n        <li>\n          <form onSubmit={onSearchSubmit}>\n            <InputField\n              className={s.searchBar}\n              name=\"searchQuery\"\n              type=\"search\"\n              placeholder={t('JOB.LOGS.FILTER_PLACEHOLDER')}\n              onChange={onSearch}\n            />\n          </form>\n        </li>\n\n        {!job.finishedOn && (\n          <li>\n            <Button isActive={liveLogs} onClick={toggleLiveLogsButton}>\n              {liveLogs ? <PauseIcon /> : <PlayIcon />}\n            </Button>\n          </li>\n        )}\n        <li>\n          <Button onClick={onClickFullScreen(logsContainer.current)}>\n            <FullscreenIcon />\n          </Button>\n        </li>\n        <li>\n          <Button onClick={copyLogsToShowToClipboard}>\n            <CopyIcon />\n          </Button>\n        </li>\n      </ul>\n      <div className={s.preWrapper}>\n        <pre>\n          <ol style={{ paddingInlineStart: `${`${logsToShow.length}`.length + 1}ch` }}>\n            {logsToShow.map((log) => (\n              <li\n                key={log.lineNumber}\n                className={getLogType(log)}\n                data-line-number={`${log.lineNumber}.`}\n              >\n                {log.message}\n                <Button\n                  onClick={() => copyLogToClipboard(log)}\n                  className={s.logLineCopyButton}\n                  tabIndex={-1}\n                >\n                  <CopyIcon />\n                </Button>\n              </li>\n            ))}\n          </ol>\n        </pre>\n      </div>\n    </div>\n  );\n};\n","import { STATUSES } from '@bull-board/api/constants/statuses';\nimport type { Status } from '@bull-board/api/typings/app';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '../../Button/Button';\nimport { DuplicateIcon } from '../../Icons/Duplicate';\nimport { PromoteIcon } from '../../Icons/Promote';\nimport { RetryIcon } from '../../Icons/Retry';\nimport { TrashIcon } from '../../Icons/Trash';\nimport { UpdateIcon } from '../../Icons/UpdateIcon';\nimport { Tooltip } from '../../Tooltip/Tooltip';\nimport s from './JobActions.module.css';\n\ninterface JobActionsProps {\n  status: Status;\n  allowRetries: boolean;\n  actions: {\n    promoteJob: () => Promise<void>;\n    retryJob: () => Promise<void>;\n    cleanJob: () => Promise<void>;\n    updateJobData: () => void;\n    duplicateJob: () => void;\n  };\n}\n\ninterface ButtonType {\n  titleKey: string;\n  Icon: React.ElementType;\n  actionKey: 'promoteJob' | 'cleanJob' | 'retryJob' | 'updateJobData' | 'duplicateJob';\n}\n\nconst buttonTypes: Record<string, ButtonType> = {\n  updateData: { titleKey: 'UPDATE_DATA', Icon: UpdateIcon, actionKey: 'updateJobData' },\n  promote: { titleKey: 'PROMOTE', Icon: PromoteIcon, actionKey: 'promoteJob' },\n  clean: { titleKey: 'CLEAN', Icon: TrashIcon, actionKey: 'cleanJob' },\n  retry: { titleKey: 'RETRY', Icon: RetryIcon, actionKey: 'retryJob' },\n  duplicate: { titleKey: 'DUPLICATE', Icon: DuplicateIcon, actionKey: 'duplicateJob' },\n} as const;\n\nconst statusToButtonsMap: Record<string, ButtonType[]> = {\n  [STATUSES.failed]: [\n    buttonTypes.retry,\n    buttonTypes.duplicate,\n    buttonTypes.updateData,\n    buttonTypes.clean,\n  ],\n  [STATUSES.delayed]: [\n    buttonTypes.promote,\n    buttonTypes.duplicate,\n    buttonTypes.updateData,\n    buttonTypes.clean,\n  ],\n  [STATUSES.completed]: [buttonTypes.duplicate, buttonTypes.retry, buttonTypes.clean],\n  [STATUSES.waiting]: [buttonTypes.duplicate, buttonTypes.updateData, buttonTypes.clean],\n  [STATUSES.waitingChildren]: [buttonTypes.duplicate, buttonTypes.updateData, buttonTypes.clean],\n  [STATUSES.prioritized]: [buttonTypes.duplicate, buttonTypes.updateData, buttonTypes.clean],\n  [STATUSES.paused]: [buttonTypes.duplicate, buttonTypes.updateData, buttonTypes.clean],\n} as const;\n\nexport const JobActions = ({ actions, status, allowRetries }: JobActionsProps) => {\n  let buttons = statusToButtonsMap[status];\n  const { t } = useTranslation();\n  if (!buttons) {\n    return null;\n  }\n\n  if (!allowRetries) {\n    buttons = buttons.filter((btn) => btn.actionKey !== 'retryJob');\n  }\n\n  return (\n    <ul className={s.jobActions}>\n      {buttons.map((type) => (\n        <li key={type.titleKey}>\n          <Tooltip title={t(`JOB.ACTIONS.${type.titleKey}`)}>\n            <Button onClick={actions[type.actionKey]} className={s.button}>\n              <type.Icon />\n            </Button>\n          </Tooltip>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { STATUSES } from '@bull-board/api/constants/statuses';\nimport type { AppJob, Status } from '@bull-board/api/typings/app';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { Card } from '../Card/Card';\nimport { ChevronDown } from '../Icons/ChevronDown';\nimport { UpRightFromSquareSolid } from '../Icons/UpRightFromSquare';\nimport { useSettingsStore } from '../../hooks/useSettings';\nimport { ChevronUp } from '../Icons/ChevronUp';\nimport { Button } from '../Button/Button';\nimport * as Collapsible from '@radix-ui/react-collapsible';\nimport { Details } from './Details/Details';\nimport { JobActions } from './JobActions/JobActions';\nimport { Progress } from './Progress/Progress';\nimport { Timeline } from './Timeline/Timeline';\nimport s from './JobCard.module.css';\n\ninterface JobCardProps {\n  job: AppJob;\n  jobUrl?: { pathname: string; search: string };\n  status: Status;\n  readOnlyMode: boolean;\n  allowRetries: boolean;\n  actions: {\n    updateJobData: () => void;\n    duplicateJob: () => void;\n    promoteJob: () => Promise<void>;\n    retryJob: () => Promise<void>;\n    cleanJob: () => Promise<void>;\n    getJobLogs: () => Promise<string[]>;\n  };\n}\n\nconst greenStatuses = [STATUSES.active, STATUSES.completed] as const;\n\nexport const JobCard = ({\n  job,\n  status,\n  actions,\n  readOnlyMode,\n  allowRetries,\n  jobUrl,\n}: JobCardProps) => {\n  const { t } = useTranslation();\n  const { collapseJob } = useSettingsStore();\n\n  const [localCollapse, setLocalCollapse] = React.useState<boolean>();\n\n  const isExpandedCard = !jobUrl || localCollapse || !collapseJob;\n  const showCollapseExpandBtn = collapseJob && jobUrl;\n  const JobTitle = (\n    <h4>\n      {/^\\d+$/.test(`${job.id}`) ? '#' : ''}\n      {job.id}\n    </h4>\n  );\n\n  return (\n    <Collapsible.Root asChild={true} open={isExpandedCard}>\n      <Card className={s.card}>\n        <div className={s.header}>\n          <div className={s.titleWithLink}>\n            {jobUrl ? (\n              <Link className={s.jobLink} to={jobUrl}>\n                {JobTitle}\n              </Link>\n            ) : (\n              JobTitle\n            )}\n\n            {job.externalUrl && (\n              <a\n                className={s.externalLink}\n                href={job.externalUrl.href}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {job.externalUrl.displayText ?? <UpRightFromSquareSolid />}\n              </a>\n            )}\n          </div>\n\n          {showCollapseExpandBtn && (\n            <Button className={s.collapseBtn} onClick={() => setLocalCollapse(!isExpandedCard)}>\n              {isExpandedCard ? <ChevronUp /> : <ChevronDown />}\n            </Button>\n          )}\n        </div>\n\n        <Collapsible.Content asChild={true}>\n          <div className={s.details}>\n            <div className={s.sideInfo}>\n              <Timeline job={job} status={status} />\n            </div>\n\n            <div className={s.contentWrapper}>\n              <div className={s.title}>\n                <h5>\n                  {job.name}\n                  {job.attempts > 1 && <span>{t('JOB.ATTEMPTS', { attempts: job.attempts })}</span>}\n                  {!!job.opts?.repeat?.count && (\n                    <span>\n                      {t(`JOB.REPEAT${!!job.opts?.repeat?.limit ? '_WITH_LIMIT' : ''}`, {\n                        count: job.opts.repeat.count,\n                        limit: job.opts?.repeat?.limit,\n                      })}\n                    </span>\n                  )}\n                </h5>\n\n                {!readOnlyMode && (\n                  <JobActions status={status} actions={actions} allowRetries={allowRetries} />\n                )}\n              </div>\n\n              <div className={s.content}>\n                <Details status={status} job={job} actions={actions} />\n\n                <Progress\n                  progress={job.progress}\n                  status={\n                    job.isFailed && !greenStatuses.includes(status as any)\n                      ? STATUSES.failed\n                      : status\n                  }\n                  className={s.progress}\n                />\n              </div>\n            </div>\n          </div>\n        </Collapsible.Content>\n      </Card>\n    </Collapsible.Root>\n  );\n};\n","import React from 'react';\nimport s from './Progress.module.css';\nimport cn from 'clsx';\nimport type { Status } from '@bull-board/api/typings/app';\nimport { STATUSES } from '@bull-board/api/constants/statuses';\n\ntype IProgress = number | { progress?: number } | string | boolean | null;\n\ninterface ProgressProps {\n  progress: IProgress;\n  strokeWidth?: number;\n  status: Status;\n  className?: string;\n}\n\nfunction extractPercentage(progress: IProgress) {\n  if (typeof progress === 'number') {\n    return progress;\n  } else if (typeof progress === 'string') {\n    return Number.isNaN(+progress) ? null : +progress;\n  } else if (\n    !!progress &&\n    typeof progress !== 'boolean' &&\n    'progress' in progress &&\n    typeof progress.progress === 'number'\n  ) {\n    return progress.progress;\n  }\n\n  return null;\n}\n\nexport const Progress = ({ progress, status, className, strokeWidth = 6 }: ProgressProps) => {\n  const percentage = extractPercentage(progress);\n  if (!percentage) {\n    return null;\n  }\n\n  const commonProps = {\n    cx: '50%',\n    cy: '50%',\n    r: `calc(50% - ${strokeWidth / 2}px)`,\n    strokeWidth,\n    ['transform-origin']: 'center',\n  };\n\n  return (\n    <svg className={cn(s.progress, className)} width=\"100%\" height=\"100%\">\n      <circle {...commonProps} />\n      <circle\n        className={cn({\n          [s.failed]: status === STATUSES.failed,\n          [s.success]: status !== STATUSES.failed,\n        })}\n        pathLength={100}\n        strokeDasharray={100}\n        strokeDashoffset={100 - percentage}\n        strokeLinejoin=\"round\"\n        strokeLinecap=\"round\"\n        transform=\"rotate(-90)\"\n        {...commonProps}\n      />\n      <text x=\"50%\" y=\"50%\" textAnchor=\"middle\" dominantBaseline=\"central\">\n        <tspan dominantBaseline=\"central\">{`${Math.round(percentage)}%`}</tspan>\n      </text>\n    </svg>\n  );\n};\n","import { formatDistance, isToday, differenceInMilliseconds, format, isSameYear } from 'date-fns';\nimport { TFunction } from 'i18next';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { dateFnsLocale } from '../../../services/i18n';\nimport s from './Timeline.module.css';\nimport type { AppJob, DateFormats, Status } from '@bull-board/api/typings/app';\nimport { STATUSES } from '@bull-board/api/constants/statuses';\nimport { useUIConfig } from '../../../hooks/useUIConfig';\n\ntype TimeStamp = number | Date;\n\nconst formatDate = (ts: TimeStamp, locale: string, customDateFormats: DateFormats) => {\n  let options: Intl.DateTimeFormatOptions;\n\n  if (isToday(ts)) {\n    if (customDateFormats?.short) {\n      return format(new Date(ts), customDateFormats.short);\n    }\n    options = {\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n    };\n  } else if (isSameYear(ts, new Date())) {\n    if (customDateFormats?.common) {\n      return format(new Date(ts), customDateFormats.common);\n    }\n    options = {\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: '2-digit',\n      second: '2-digit',\n    };\n  } else {\n    if (customDateFormats?.full) {\n      return format(new Date(ts), customDateFormats.full);\n    }\n    options = {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: '2-digit',\n      second: '2-digit',\n    };\n  }\n\n  return new Intl.DateTimeFormat(locale, options).format(ts);\n};\n\nconst formatDuration = (finishedTs: TimeStamp, processedTs: TimeStamp, t: TFunction) => {\n  const durationInMs = differenceInMilliseconds(finishedTs, processedTs);\n  const durationInSeconds = durationInMs / 1000;\n  if (durationInSeconds > 5) {\n    return formatDistance(finishedTs, processedTs, {\n      includeSeconds: true,\n      locale: dateFnsLocale,\n    });\n  }\n  if (durationInSeconds >= 1) {\n    return t('JOB.DURATION.SECS', { duration: durationInSeconds.toFixed(2) });\n  }\n  return t('JOB.DURATION.MILLI_SECS', { duration: durationInMs });\n};\n\nexport const Timeline = function Timeline({ job, status }: { job: AppJob; status: Status }) {\n  const { t, i18n } = useTranslation();\n  const uiConfig = useUIConfig();\n  const dateFormats = uiConfig.dateFormats || {};\n\n  return (\n    <div className={s.timelineWrapper}>\n      <ul className={s.timeline}>\n        <li>\n          <small>{t('JOB.ADDED_AT')}</small>\n          <time>{formatDate(job.timestamp || 0, i18n.language, dateFormats)}</time>\n        </li>\n        {!!job.delay && job.delay > 0 && status === STATUSES.delayed && (\n          <li>\n            <small>{t('JOB.WILL_RUN_AT')}</small>\n            <time>\n              {formatDate(\n                (job.timestamp || 0) + (job.opts.delay || job.delay || 0),\n                i18n.language,\n                dateFormats\n              )}\n            </time>\n            {job.delay !== job.opts.delay && <small>{t('JOB.DELAY_CHANGED')} </small>}\n          </li>\n        )}\n        {!!job.processedOn && (\n          <li>\n            <small>\n              {!!job.delay && job.delay > 0 && t('JOB.DELAYED_FOR') + ' '}\n              {formatDuration(job.processedOn, job.timestamp || 0, t)}\n            </small>\n            <small>{t('JOB.PROCESS_STARTED_AT')}</small>\n            <time>{formatDate(job.processedOn, i18n.language, dateFormats)}</time>\n            {!!job.processedBy && (\n              <small>{t('JOB.PROCESSED_BY', { processedBy: job.processedBy })}</small>\n            )}\n          </li>\n        )}\n        {!!job.finishedOn && (\n          <li>\n            <small>{formatDuration(job.finishedOn, job.processedOn || 0, t)}</small>\n            <small>\n              {t(\n                job.isFailed && status !== STATUSES.active && status !== STATUSES.completed\n                  ? `JOB.FAILED_AT`\n                  : 'JOB.FINISHED_AT'\n              )}\n            </small>\n            <time>{formatDate(job.finishedOn, i18n.language, dateFormats)}</time>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n","import React, { PropsWithChildren } from 'react';\nimport s from './StickyHeader.module.css';\n\nexport const StickyHeader = ({\n  actions,\n  children,\n}: PropsWithChildren<{ actions: React.ReactElement }>) => (\n  <div className={s.stickyHeader}>\n    {children}\n    {!!actions && <div className={s.actionContainer}>{actions}</div>}\n  </div>\n);\n","import React from 'react';\nimport s from './Tooltip.module.css';\n\nexport const Tooltip = ({ title, children }: React.PropsWithChildren<{ title: string }>) => (\n  <span data-title={title} className={s.tooltip}>\n    {children}\n  </span>\n);\n","import { matchPath } from 'react-router';\nimport { useLocation } from 'react-router-dom';\n\nexport function useActiveJobId(): string {\n  const { pathname } = useLocation();\n\n  const match = matchPath<{ name: string; jobId: string }>(pathname, {\n    path: ['/queue/:name/:jobId'],\n    exact: false,\n    strict: false,\n  });\n\n  return decodeURIComponent(match?.params.jobId || '');\n}\n","import { STATUSES } from '@bull-board/api/constants/statuses';\nimport type { Status } from '@bull-board/api/typings/app';\nimport { useEffect, useState } from 'react';\nimport { useSettingsStore } from './useSettings';\n\nexport const availableJobTabs = ['Data', 'Options', 'Logs', 'Error'] as const;\n\nexport type TabsType = (typeof availableJobTabs)[number];\n\nexport function useDetailsTabs(currentStatus: Status) {\n  const [tabs, updateTabs] = useState<TabsType[]>([]);\n  const { defaultJobTab } = useSettingsStore();\n\n  const [selectedTab, setSelectedTab] = useState<TabsType>(\n    tabs.find((tab) => tab === defaultJobTab) || tabs[0]\n  );\n\n  useEffect(() => {\n    let nextTabs: TabsType[] = availableJobTabs.filter((tab) => tab !== 'Error');\n    if (currentStatus === STATUSES.failed) {\n      nextTabs = ['Error', ...nextTabs];\n    } else {\n      nextTabs = [...nextTabs, 'Error'];\n    }\n\n    updateTabs(nextTabs);\n  }, [currentStatus]);\n\n  useEffect(() => {\n    setSelectedTab(tabs.includes(defaultJobTab) ? defaultJobTab : tabs[0]);\n  }, [defaultJobTab, tabs]);\n\n  return {\n    tabs: tabs?.map((title) => ({\n      title,\n      isActive: title === selectedTab,\n      selectTab: () => setSelectedTab(title),\n    })),\n    selectedTab,\n  };\n}\n","import type { AppJob, JobRetryStatus } from '@bull-board/api/typings/app';\nimport { useTranslation } from 'react-i18next';\nimport { create } from 'zustand';\nimport { JobActions, Status } from '../../typings/app';\nimport { getConfirmFor } from '../utils/getConfirmFor';\nimport { useActiveJobId } from './useActiveJobId';\nimport { useActiveQueueName } from './useActiveQueueName';\nimport { useApi } from './useApi';\nimport { useConfirm } from './useConfirm';\nimport { useInterval } from './useInterval';\nimport { useQueues } from './useQueues';\nimport { useSettingsStore } from './useSettings';\n\nexport type JobState = {\n  job: AppJob | null;\n  status: Status;\n  loading: boolean;\n  updateJob(job: AppJob, status: Status): void;\n};\n\nconst useQueuesStore = create<JobState>((set) => ({\n  job: null,\n  status: 'latest',\n  loading: true,\n  updateJob: (job: AppJob, status: Status) => set(() => ({ job, status, loading: false })),\n}));\n\nexport function useJob(): Omit<JobState, 'updateJob'> & { actions: JobActions } {\n  const api = useApi();\n  const activeQueueName = useActiveQueueName();\n  const activeJobId = useActiveJobId();\n  const {\n    actions: { updateQueues },\n  } = useQueues();\n\n  const { t } = useTranslation();\n\n  const { confirmJobActions, pollingInterval } = useSettingsStore(\n    ({ confirmJobActions, pollingInterval }) => ({\n      confirmJobActions,\n      pollingInterval,\n    })\n  );\n\n  const { job, status, loading, updateJob: setState } = useQueuesStore((state) => state);\n  const { openConfirm } = useConfirm();\n\n  const getJob = () =>\n    api.getJob(activeQueueName, activeJobId).then(({ job, status }) => setState(job, status));\n\n  const pollJob = () =>\n    useInterval(getJob, pollingInterval > 0 ? pollingInterval * 1000 : null, [activeQueueName]);\n\n  const withConfirmAndUpdate = getConfirmFor(activeJobId ? getJob : updateQueues, openConfirm);\n\n  const promoteJob = (queueName: string) => (job: AppJob) =>\n    withConfirmAndUpdate(\n      () => api.promoteJob(queueName, job.id),\n      t('JOB.ACTIONS.CONFIRM.PROMOTE'),\n      confirmJobActions\n    );\n\n  const retryJob = (queueName: string, status: JobRetryStatus) => (job: AppJob) =>\n    withConfirmAndUpdate(\n      () => api.retryJob(queueName, job.id, status),\n      t('JOB.ACTIONS.CONFIRM.RETRY'),\n      confirmJobActions\n    );\n\n  const cleanJob = (queueName: string) => (job: AppJob) =>\n    withConfirmAndUpdate(\n      () => api.cleanJob(queueName, job.id),\n      t('JOB.ACTIONS.CONFIRM.CLEAN'),\n      confirmJobActions\n    );\n\n  const updateJobData = (queueName: string, job: AppJob, newData: Record<string, any>) =>\n    withConfirmAndUpdate(() => api.updateJobData(queueName, job.id, newData), '', false);\n\n  const getJobLogs = (queueName: string) => (job: AppJob) => () =>\n    api.getJobLogs(queueName, job.id);\n\n  return {\n    job,\n    status,\n    loading,\n    actions: {\n      getJob,\n      pollJob,\n      promoteJob,\n      cleanJob,\n      getJobLogs,\n      retryJob,\n      updateJobData,\n    },\n  };\n}\n","import { nanoid } from 'nanoid';\n\nconst isWebworkerSupported = typeof window.Worker !== 'undefined';\nlet highlightWorker: Worker | null = null;\nconst messageQueue = new Map<string, { resolve: any; reject: any }>();\n\nexport async function asyncHighlight(code: string, language: string): Promise<string> {\n  if (isWebworkerSupported) {\n    if (!highlightWorker) {\n      highlightWorker = new Worker(new URL('./worker.ts', import.meta.url), {\n        name: 'highlight-worker',\n      });\n      highlightWorker.onmessage = ({ data }) => {\n        const { id, code } = data;\n        if (messageQueue.has(id)) {\n          const { resolve } = messageQueue.get(id) as any;\n          resolve(code);\n        }\n      };\n    }\n\n    return new Promise((resolve, reject) => {\n      const messageId = nanoid(5);\n      highlightWorker?.postMessage({ id: messageId, code, language });\n      messageQueue.set(messageId, {\n        resolve: (formattedCode: string) => {\n          messageQueue.delete(messageId);\n          resolve(formattedCode);\n        },\n        reject: () => {\n          messageQueue.delete(messageId);\n          reject();\n        },\n      });\n      setTimeout(() => reject(), 60 * 1000);\n    });\n  } else {\n    const { highlighter } = await import(\n      /* webpackChunkName: \"highlight\" */\n      /* webpackMode: \"lazy-once\" */\n      /* webpackPreload: true */\n      './config'\n    );\n\n    return highlighter.highlightAuto(code, [language]).value || '';\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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;;;AACA;AACA;AACA;AACA;AAxCA;;AACA;AACA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAAA;;AACA;AAAA;;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AAKA;AAEA;AAAA;AAAA;AACA;;;;AAAA;;;;;;;;;;;;;;;AAIA;AACA;AAAA;AACA;;;;;;;;;;;;;;;AAGA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;AAVA;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA;AAlHA;;AACA;AAmBA;;;AApBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAoBA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA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A;AACA;AACA;AACA;AACA;AACA;AA/BA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAAA;AACA;AACA;AACA;;AAGA;AACA;AAEA;AACA;AAAA;;AAEA;AACA;AAAA;AAEA;AAEA;AAOA;AAOA;AAOA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AChGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AACA;AACA"}